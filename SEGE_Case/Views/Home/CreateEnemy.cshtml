@model SEGE_Case.WebUI.Models.EnemyViewModel

@{
    ViewData["Title"] = "Create Enemy";
}

<h5>Create Enemy</h5>

@using (Html.BeginForm("CreateEnemy", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Alchemy, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Alchemy, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Alchemy, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Archery, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Archery, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Archery, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dexterity, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Dexterity, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Dexterity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Endurance, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Endurance, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Endurance, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Intelligence, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Intelligence, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Intelligence, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Luck, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Luck, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Luck, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Perception, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Perception, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Perception, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Resilience, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Resilience, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Resilience, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stealth, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Stealth, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Stealth, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Strength, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Wisdom, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Wisdom, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Wisdom, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Level, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rarity, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Rarity, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.Rarity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StarCount, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.StarCount, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.StarCount, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PinkStarCount, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.PinkStarCount, new { @class = "form-control custom-width" })
        @Html.ValidationMessageFor(model => model.PinkStarCount, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Create Enemy</button>
}

<style>
    .form-control.custom-width {
        max-width: 300px; /* Input genişliğini ayarlayabilirsiniz */
    }

    .form-group {
        display: flex;
        align-items: center;
        margin-bottom:5px;
    }

        .form-group .control-label {
            width: 150px; /* Label genişliğini ayarlayabilirsiniz */
            margin-right: 10px; /* Label ve input arasına boşluk ekleyebilirsiniz */
        }
</style>
